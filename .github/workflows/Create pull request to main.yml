name: Create Pull Request from Release to Main

on:
  push:
    branches:
      - release/*  # Trigger on push to any release branch

jobs:
  create_pull_request:
    runs-on: ubuntu-latest
    outputs:
      pr_created: ${{ steps.set-output.outputs.created }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check and Create PR
        id: set-output
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Checking if PR from release to main already exists..."
          # Extract base and head for PR
          BASE_BRANCH="main"
          HEAD_BRANCH="${{ github.ref_name }}"
          
          # Check if PR already exists
          EXISTING_PR=$(gh pr list --base "$BASE_BRANCH" --head "$HEAD_BRANCH" --state open --json number --jq '. | length') || true
          
          if [ "$EXISTING_PR" -eq "0" ]; then
            echo "No open PR found. Creating PR..."
            gh pr create \
              --base "$BASE_BRANCH" \
              --head "$HEAD_BRANCH" \
              --title "Merge $HEAD_BRANCH into $BASE_BRANCH" \
              --body "This PR was automatically created because changes were pushed to '$HEAD_BRANCH'."
            echo "created=true" >> $GITHUB_OUTPUT
          else
            echo "An open PR from $HEAD_BRANCH to $BASE_BRANCH already exists. Skipping creation."
            echo "created=false" >> $GITHUB_OUTPUT
          fi

  validate_only_to_main:
    name: ValidateOnly To Main
    needs: create_pull_request
    if: needs.create_pull_request.outputs.pr_created == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Validate-only logic here
        run: echo "âœ… Running 'ValidateOnly To Main' because a new PR was created."
