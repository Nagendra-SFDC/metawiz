name: Create Pull Requests for Release

on:
  workflow_dispatch:
    inputs:
      feature_branch_names:
        description: 'Comma-separated list of feature branch names (e.g., feature/v.33,feature/v.22)'
        required: true
      release_branch_name:
        description: 'Name of the release branch (e.g., release/v.34)'
        required: true

permissions:
  contents: write
  pull-requests: write

jobs:
  create_prs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check if release branch exists
        id: check_branch
        run: |
          if git ls-remote --exit-code --heads origin "${{ github.event.inputs.release_branch_name }}"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create release branch if it doesn't exist
        if: steps.check_branch.outputs.exists == 'false'
        run: |
          git fetch --all
          git checkout -b "${{ github.event.inputs.release_branch_name }}" origin/main
          git push origin "${{ github.event.inputs.release_branch_name }}"

      - name: Create pull requests from feature branches
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch all remote branches
          git fetch --all

          # Debug: List all remote branches
          echo "Remote branches:"
          git branch -r

          # Read feature branch names and release branch
          IFS=',' read -ra FEATURES <<< "${{ github.event.inputs.feature_branch_names }}"
          RELEASE_BRANCH="${{ github.event.inputs.release_branch_name }}"

          # Loop through each feature branch and create a PR
          for FEATURE in "${FEATURES[@]}"; do
            echo "Creating PR from $FEATURE to $RELEASE_BRANCH"

            # Create PR using GitHub CLI
            gh pr create \
              --base "$RELEASE_BRANCH" \
              --head "$FEATURE" \
              --title "Merge $FEATURE into $RELEASE_BRANCH" \
              --body "Automated PR from $FEATURE to $RELEASE_BRANCH" || echo "PR creation failed for $FEATURE â†’ $RELEASE_BRANCH"
              --label "$PR_LABEL"
          done
