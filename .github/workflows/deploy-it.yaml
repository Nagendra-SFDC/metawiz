name: Deploy to sffnoobs environment on push to main

on:
  push:
    branches: [ main ]
    paths:
      - 'force-app/**'

jobs:
  Deploy-to-sffnoobs-environment:
      runs-on: ubuntu-latest
      environment: sffnoobs
      steps:
          - uses: actions/setup-node@v3
            with:
              node-version: '18'
              
          - name: 'Checkout source code'
            uses: actions/checkout@v3
            with:
              fetch-depth: '2'

          # Install Salesforce CLI
          - name: 'Install sfdx'
            run: npm install @salesforce/cli --global
            
          - name: 'Installing sfdx git delta'
            run: | 
                echo Y | sfdx plugins:install sfdx-git-delta
                sfdx plugins

          - name: 'Revert Last Commit and Push'
  run: |
      git config --global user.email "nagendra@omniflexconsulting.com"
      git config --global user.name "nagendra@omniflexconsulting.com.sdocs"
      
      LAST_COMMIT=$(git log --pretty=format:'%H' -n 1)
      if [ $(git rev-list --parents -n 1 $LAST_COMMIT | wc -w) -gt 2 ]; then
          echo "Merge commit detected. Using -m 1 option."
          git revert -m 1 HEAD --no-edit
      else
          echo "Regular commit detected. Reverting normally."
          git revert HEAD --no-edit
      fi
      git push origin main || echo "No changes to push, continuing..."


          - name: 'Create delta packages'
            run: | 
                mkdir -p changed-sources/force-app
                sf sgd source delta --to "HEAD" --from "HEAD~1" --output changed-sources/ --include-deleted --generate-delta --source force-app/ || echo "No changes detected, skipping delta deployment."

          - name: 'Deploy to environment with local tests'
            run: |        
                echo "${{ vars.JWT_SERVER_KEY }}" > server.key
                sf org login jwt --username ${{ vars.DEPLOYMENT_USER_NAME }} --jwt-key-file server.key --client-id ${{ vars.CONSUMER_KEY }} --instance-url ${{ vars.INSTANCE_URL }} --set-default
                
                if [ -d "changed-sources/force-app" ] && [ "$(ls -A changed-sources/force-app 2>/dev/null)" ]; then
                    echo "[INFO] Deploying delta changes..."
                    sf project deploy start --source-dir changed-sources/force-app --test-level RunLocalTests
                else
                    echo "[WARNING] No delta changes found. Deploying full source..."
                    sf project deploy start --source-dir force-app --test-level RunLocalTests
                fi
